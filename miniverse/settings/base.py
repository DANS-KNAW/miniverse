"""
Django settings for miniverse project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: join(PROJECT_ROOT, ...)
import os
from os.path import abspath, dirname
from os.path import join

PROJECT_ROOT = dirname(dirname(dirname(abspath(__file__))))

SITE_ID = 1

TIME_ZONE = 'America/New_York'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'SET-A-SECRET-KEY'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

METRICS_CACHE_VIEW = False
METRICS_CACHE_VIEW_TIME = 60 * 60 * 2   # 2 HOURS
METRICS_CACHE_API_TIME = 60 * 10    # 10 minutes

ALLOWED_HOSTS = []



# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    # Existing DV tables
    'dv_apps.terms_of_use',

    'dv_apps.actionlog',
    'dv_apps.dataverse_auth',
    'dv_apps.dvobjects',
    'dv_apps.dataverses',
    'dv_apps.harvesting',   # placed after dataverses/before datasets (needs lazy load instead)
    'dv_apps.datasets',
    'dv_apps.datafiles',
    'dv_apps.datasetfields',
    'dv_apps.guestbook',
    'dv_apps.notifications',

    # Maps
    'dv_apps.installations',
    # Metrics
    'dv_apps.metrics',
    # Quality checks
    'dv_apps.quality_checks',


    # Experiments
    #'dv_apps.data_previewer',
    #'dv_apps.dataset_docs',
    'dv_apps.dvobject_api',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# Restrict by IP address
#'dv_apps.admin_restrict.middleware.RestrictAdminMiddleware',

ROOT_URLCONF = 'miniverse.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            join(PROJECT_ROOT, 'templates'),
            join(PROJECT_ROOT, 'templates', 'recipes'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'miniverse.wsgi.application'

# URL of the Dataverse db being read
DATAVERSE_INSTALLATION_URL = 'https://dataverse.harvard.edu'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(PROJECT_ROOT, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# Static file sources
STATICFILES_DIRS = [join(PROJECT_ROOT, 'static')]
#print 'STATICFILES_DIRS', STATICFILES_DIRS

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            join(PROJECT_ROOT, 'templates'),
            join(PROJECT_ROOT, 'templates', 'miniverse'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # Insert your TEMPLATE_CONTEXT_PROCESSORS here or use this
                # list if you haven't customized them:
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
                'miniverse.context_processors.global_settings.settings_for_templates',
            ],
        },
    },
]


MEDIA_ROOT = join(PROJECT_ROOT,"media")
MEDIA_URL = '/media/'

SWAGGER_HOST = '127.0.0.1:8000' # temp, this should come from sites framework
SWAGGER_SCHEME = 'http'

#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
